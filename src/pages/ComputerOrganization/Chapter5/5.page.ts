import { p, section } from '@src/components/@write'
import { multipleChoice, answer } from '@src/components/@questionnaire'
const title = '5.5　单项选择题'
const page = section(title)(
    multipleChoice('1.机器主频的倒数（一个节拍）等于')(answer(p`CPU 时钟周期`), p`主板时钟周期`, p`指令周期`, p`存储周期`),
    multipleChoice('2.CPU 中控制器的功能是')(
        p`产生时序信号`,
        p`控制从主存取出一条指令`,
        p`完成指令操作码译码`,
        answer(p`完成指令操作码译码，并产生操作控制信号`)
    ),
    multipleChoice('3.冯·诺依曼计算机中指令和数据均以二进制形式存放在存储器中，CPU 依据（　　）来区分它们。')(
        p`指令和数据的表示形式不同`,
        p`指令和数据的寻址方式不同`,
        answer(p`指令和数据的访问时点不同`),
        p`指令和数据的地址形式不同`
    ),
    multipleChoice('4.下列寄存器中，对汇编语言程序员不透明的是')(
        p`存储器地址寄存器 MAR`,
        answer(p`程序计数器 PC`),
        p`存储器数据寄存器 MDR`,
        p`指令寄存器 IR`
    ),
    multipleChoice('5.下列有关 CPU 中部分部件的功能的描述中，错误的是')(
        p`控制单元用于对指令操作码译码并生成控制信号`,
        p`PC 称为程序计数器，用于存放将要执行的指令的地址`,
        p`通过将 PC 按当前指令长度增量，可实现指令的按序执行`,
        answer(p`IR 称为指令寄存器，用来存放当前指令的操作码`)
    ),
    multipleChoice('6.执行完当前指令后，PC 中存放的是后继指令的地址，因此 PC 的位数和（　　）的位数相同。')(
        p`指令寄存器 IR`,
        p`指令译码器 ID`,
        answer(p`存储器地址寄存器 MAR`),
        p`程序状态字寄存器 PSWR`
    ),
    multipleChoice('7.通常情况下，下列（　　）部件不包含在中央处理器（CPU）芯片中。')(p`ALU`, p`控制器`, p`通用寄存器`, answer(p`DRAM`)),
    multipleChoice('8.下列有关程序计数器 PC 的叙述中，错误的是')(
        p`每条指令执行后，PC 的值都会被改变`,
        answer(p`指令顺序执行时，PC 的值总是自动加 1`),
        p`调用指令执行后，PC 的值一定是被调用过程的入口地址`,
        p`无条件转移指令执行后，PC 的值一定是转移目标地址`
    ),
    multipleChoice('9.CPU 取出一条指令并执行所用的时间被称为')(p`时钟周期`, p`CPU 周期`, p`机器周期`, answer(p`指令周期`)),
    multipleChoice('10.下列有关指令周期的叙述中，错误的是')(
        p`指令周期的第一个阶段一定是取指令阶段`,
        answer(p`乘法指令和加法指令的指令周期总是一样长`),
        p`一个指令周期由若干个机器周期或时钟周期组成`,
        p`相对于 RISC，CISC 风格处理器的指令周期更长`
    ),
    multipleChoice('11.下列有关 CPU 时钟信号的叙述中，错误的是')(
        answer(p`处理器总是每来一个时钟信号就开始执行一条新的指令`),
        p`边沿触发指状态单元总在时钟上升沿或下降沿开始改变状态`,
        p`时钟周期以相邻状态单元之间最长组合逻辑延迟为基准确定`,
        p`每个时钟周期称为一个节拍，机器的主频就是时钟周期的倒数`
    ),
    multipleChoice('12.下列有关数据通路的叙述中，错误的是')(
        p`数据通路由若干操作元件和状态元件连接而成`,
        p`数据通路的功能由控制部件送出的控制信号决定`,
        p`ALU 属于操作元件，用于执行各类算术和逻辑运算`,
        answer(p`通用寄存器属于状态元件，但不包含在数据通路中`)
    ),
    multipleChoice('13.以下关于指令流水线设计的叙述中，错误的是')(
        p`指令执行过程中的各个子功能都须包含在某个流水段中`,
        p`所有子功能都必须按一定的顺序经过流水段`,
        p`虽然各子功能所用实际时间可能不同，但经过每个流水段的时间都一样`,
        answer(p`任何时候各个流水段的功能部件都不可能执行空（nop）操作`)
    ),
    multipleChoice('14.下列有关 RISC 特征的描述中，错误的是')(
        p`指令格式规整，寻址方式少`,
        p`采用硬连线控制和指令流水线`,
        answer(p`配置的通用寄存器数目不多`),
        p`运算类指令的操作数不访存`
    ),
    multipleChoice('15.以下关于指令流水线和指令执行效率关系的叙述中，错误的是')(
        p`加倍增加流水段个数不能成倍提高指令执行效率`,
        answer(p`为了提高指令吞吐率，流水段个数可以无限制地增多`),
        p`加深流水线深度，可以提高处理器的时钟频率`,
        p`随着流水段个数的增加，流水段之间缓存开销的比例增大`
    ),
    multipleChoice(
        '16.某计算机的指令流水线由 4 个功能段组成，指令流经各功能段的时间（忽略各功能段之间流水段寄存器的缓存时间）分别为 90ns、80ns、70ns 和 60ns，则该计算机的 CPU 时钟周期至少是'
    )(answer(p`90ns`), p`80ns`, p`70ns`, p`60ns`),
    multipleChoice(
        '17.假定执行最复杂的指令需要完成 6 个子功能，分别由对应的功能部件 A～F 来完成，每个功能部件所花的时间分别为 80ps、40ps、50ps、70ps、20ps、30ps，流水段寄存器延时为 20ps，现把最后两个功能部件 E 和 F 合并，以产生一个 5 段流水线。该 5 段流水线的时钟周期至少是（　　）ps。'
    )(p`70`, p`80`, p`90`, answer(p`100`)),
    multipleChoice('18.以下给定的情况中，不会引起指令流水线阻塞的是')(p`外部中断`, p`指令数据相关`, answer(p`执行空操作指令`), p`条件转移`),
    section('部分题目的答案解析')(
        section('第 4 题')(
            p`某个寄存器对于汇编语言程序员来说是透明的，是指汇编语言程序员在使用汇编指令编写程序时，无法感知到这个寄存器的存在。显然，汇编程序员无需知道 MAR、MDR 和 IR 是否存在，更无需了解这些寄存器和程序是什么关系，但是，汇编程序员肯定知道指令会如何改变程序计数器 PC 的内容，可以使用转移指令来改变程序计数器的顺序增量方式，因此，PC 对汇编程序员来说不是透明的。答案为 B。`
        ),
        section('第 8 题')(
            p`每条指令执行结束后（对于循环执行的指令，在完成所有次数的循环执行后，称为指令执行结束），总是要执行新的指令，否则程序就无法完成执行。因此，每条指令执行后程序计数器（PC）的内容一定会改变。那么，如何改变 PC 的内容？主要看指令是顺序执行还是跳转执行，若是顺序执行，则 PC 的值总是自动加上当前执行指令的长度，通常用「1」表示，这里的「1」是指一条指令的长度，所以，选项 B 的说法是错误的。`,
            p`调用指令和无条件转移指令都是无条件跳转到转移目标地址执行，调用指令的转移目标地址就是被调用过程的首地址，因此 PC 的值都要改变为转移目标地址。`,
            p`综上所述，答案为 B。`
        ),
        section('第 11 题')(
            p`处理器根据自身的时钟信号来对指令的执行进行定时，但是，并不是每来一个时钟信号就开始执行一条新的指令，例如，在多周期处理器中，一条指令的执行需要分解成多个阶段进行，每个阶段在一个时钟周期内完成一个特定的功能，因此，每来一个时钟开始执行一个阶段性操作。因此，选项 A 的说法是错误的。`,
            p`每来一个时钟开始进行阶段性操作，因此，必须确定时钟的哪一刻算开始，通常这个开始点或是时钟信号的上升沿或是下降沿，称为触发边沿。触发器或寄存器等状态元件总是在触发边沿开始改变状态。`,
            p`为了保证每个阶段的操作都能在一个时钟周期内完成，时钟周期必须足够长，以保证数据在最长延迟的组合逻辑电路中能够传输完成。因此，时钟周期以相邻状态单元之间最长组合逻辑延迟为基准确定。`
        ),
        section('第 12 题')(
            p`数据通路就是指令执行过程中数据流动所经过的路径及其路径上的部件，这些部件或者是组合逻辑元件或者是时序逻辑元件，前者称为操作元件，后者称为状态元件，因此，数据通路就是由若干操作元件和状态元件连接而成的。数据通路的功能由控制部件送出的控制信号决定。数据通路中一个重要的操作元件为 ALU，用于执行各类算术和逻辑运算；另一个重要的元件为通用寄存器，属于状态元件。`,
            p`综上所述，答案为 D。`
        ),
        section('第 16 题')(
            p`流水线 CPU 以最长功能段时间为基准确定时钟周期，通常要考虑流水段寄存器的延时，但是，本题忽略这个时间，因此，该计算机 CPU 时钟周期至少是 90ns，答案为选项 A。`
        ),
        section('第 18 题')(
            p`执行空操作指令时只要保证最终没有信息写入任何寄存器和存储单元就行，因此，空指令的执行不会引起指令流水线阻塞，而外部中断、指令数据相关和条件转移这三种情况的发生都会导致指令无法正常执行下去，从而引起指令流水线阻塞。答案为 C。`
        )
    )
).elem
