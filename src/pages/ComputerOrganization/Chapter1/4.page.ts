import { section, p, precode } from '@src/components/@write'
const title='1.4　常见问题解答'
const page = section(title)(
    section('1.计算机系统就是硬件系统吗？')(
        p`答：这样说是不完整的。一个完整的计算机系统应该包括硬件系统和软件系统两部分。硬件系统包括运算器、控制器、存储器、输入设备和输出设备五大基本部件。软件系统分为系统软件和应用软件两大类。系统软件包括操作系统、计算机语言处理程序（各种程序翻译软件，包括编译程序、解释程序、汇编程序）、服务性程序、数据库管理系统和网络软件等；应用软件包括各种特定领域的处理程序。计算机系统中的硬件和软件是相辅相成的，缺一不可。软件是计算机系统的灵魂，没有软件的硬件不能被用户使用，犹如一堆废铁。`
    ),
    section('2.同一个功能既可以由软件完成，也可以由硬件完成吗？')(
        p`答：软件和硬件是两种完全不同的形态，硬件是实体，是物质基础；软件是一种信息，看不见、摸不到。但是它们都可以用来实现逻辑功能，所以在逻辑功能上，软件和硬件是等价的。因此，在计算机系统中，许多功能既可以直接由硬件实现，也可以在硬件的配合下由软件来实现。例如，乘法运算既可以用专门的乘法器硬件实现，即机器提供专门的一条乘法指令；也可以用乘法子程序来实现，即不提供乘法指令，而由加法指令和移位指令等组成的一个指令序列来完成乘法运算。`
    ),
    section('3.解释程序和编译程序有什么差别？')(
        p`答：编译程序和解释程序是两种不同的翻译程序。二者的不同在于编译程序将高级语言源程序全部翻译成目标程序，每次执行程序时，只要执行目标程序，因此，只要源程序不变，就无需重新翻译；解释程序是将源程序的一条语句，翻译成对应的机器目标代码并立即执行，然后翻译下一条语句并执行，直至所有源程序中的语句全部被翻译并执行完。所以解释程序的执行过程是翻译一句，执行一句。解释的结果是源程序执行的结果，而不会生成目标程序。`
    ),
    section('4.要计算机做的任何工作都要先编写成程序才能完成吗？')(
        p`答：是的，要计算机完成任何事情，都必须先编制程序。程序是由指令构成的。不管是用哪种语言编写的程序，最终都要翻译成机器语言程序才能让机器理解。机器语言程序是由一条一条指令组成的程序。CPU 的主要功能就是周而复始地执行指令，因此，要计算机完成的所有功能都是通过执行一条一条指令来实现的，也就是由一个程序来完成。有时我们说某个特定的功能是由硬件实现的，但并不是说不要编写程序，如乘法功能可由乘法器这个硬件实现，但要启动这个硬件（乘法器）工作，必须先执行程序中的乘法指令。`
    ),
    section('5.指令和数据在形式上没有差别，且都存于存储器中，计算机如何区分它们？')(
        p`答：指令和数据在计算机内部都是用二进制表示的，因而都是 0、1 序列，在形式上没有差别。在指令和数据取到 CPU 之前，它们都存放在存储器中，CPU 必须能够区分读出的是指令还是数据。如果是指令，CPU 会把指令的操作码送到指令译码器进行译码，而把指令的地址码送到相应的地方进行处理；如果是数据，则送到寄存器或运算器。那么，CPU 如何识别读出的是指令还是数据呢？实际上，CPU 并不是把信息从主存读出后靠某种判断方法来识别信息是数据还是指令的，而是在读出之前就知道将要读的信息是数据还是指令了。执行指令的过程分为取指令、指令译码、取操作数、运算、送结果等。所以，在取指令阶段，总是根据程序计数器（PC）的值去取指令，所以取来的一定是指令；取操作数阶段取来的一定是数据。`
    ),
    section('6.衡量计算机系统性能的主要指标是什么？')(
        p`答：计算机性能的好坏主要体现在速度方面，而衡量速度快慢主要有两个指标：响应时间和吞吐率。响应时间是指从作业提交开始到作业完成所花的时间。一般一个程序的响应时间除了 CPU 执行该程序包含的指令所用的时间外，还包括等待输入/输出操作所需时间和操作系统运行这个程序所花的时间开销等。吞吐率是指单位时间内完成的工作量。`
    ),
    section('7.CPU 的时钟频率越高，机器的速度就越快，对吗？')(
        p`答：在其他因素不变的情况下，CPU 的时钟频率越高，机器的速度肯定越快。但是，程序执行的速度除了与 CPU 的速度有关外，还与存储器、I/O 等模块的存取速度、总线的传输速度、cache 的设计策略等有很大关系。因此，机器的速度不是只由 CPU 的时钟频率决定。`
    ),
    section('8.CPI 的含义是什么？执行时间（响应时间）与 CPI 是什么关系？')(
        p`答：CPI 是指每条指令执行时所用的时钟周期数。通常，一条特定指令的 CPI 是一个确定的值，而某个计算机或程序的 CPI 则是一个平均值。一个程序的执行时间取决于该程序所包含的指令数、CPI 和时钟周期。在指令数和时钟周期一定的情况下，CPI 越大，执行时间越长。`
    ),
    section('9.用户真正感觉到的程序执行时间是否就是执行一个程序中所有指令所用的时间？')(
        p`答：不是。执行一个程序中所有指令所用的时间实际上比用户真正感觉到的程序执行时间要短。因为在一个程序执行过程中，可能还会执行操作系统代码或其他用户程序，并且有时还可能等待 I/O 操作。比如，在 UNIX 操作系统中，假定用 time 命令测试某程序执行时间的结果为：`,
        precode('80.3u 10.1s 2：02 74%')(),
        p`则说明该程序所有指令的执行时间（即用户 CPU 时间）只有 80.3s，执行操作系统代码所用时间（即系统 CPU 时间）是 10.1s，用户感觉到的总响应时间为 2×60+2=122s，其中的（80.3+10.1）/122=74% 是 CPU 时间，剩下 26% 的时间（即 30 多秒）用来等待 I/O 操作或运行其他用户程序。`
    ),
    section('10.计算机的 MIPS 数越大，说明性能越好，对吗？')(
        p`答：不对。MIPS 数反映的是机器执行定点指令的速度。但是，不同机器的指令集不同，指令的功能也不同，也许一个机器上一条指令的功能在另外一个机器上要用多条指令来完成，这样，同样的指令条数所完成的功能可能完全不同。另外，不同机器的 CPI 和时钟周期也不同，因而一条指令所用的时间也不同。所以，用 MIPS 数来对不同的机器进行性能比较是不太客观的。`
    ),
    section('11.基准测试程序执行得越快，说明机器的性能越好，对吗？')(
        p`答：不对。一般情况下，基准测试程序能够反映机器性能的好坏。但是，如果制造商针对基准测试程序中频繁出现的语句采用专门的编译器，使基准测试程序的运行效率大幅提高，那么基准测试程序测试的结果就不能说明问题。`
    )
).elem
